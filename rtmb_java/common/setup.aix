#!/usr/bin/bsh
# *******************************************************************************
# Copyright (c) 2008 International Business Machines Corp.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#    Ajith Ramanath            - initial API and implementation
#    Radhakrishnan Thangamuthu - initial API and implementation
#    Mike Fulton               - initial API and implementation
# *******************************************************************************

OS=`uname -s`
if [ "$OS" !=  "AIX" ]
then
  echo 'Run setup_make.aix only on an AIX system. The OS you are running on is:' $OS
  return 8
fi

orig_pwd=$PWD

# Change into the parent directory of this script, which should be the root of the Real Time Micro Benchmark
# By changing into the directory and then exporting RTMB_HOME (vs just getting the results of dirname $BASH_ARGV)
# the directory will not have any spurious ../'s in it
#
# NOTE: This is not a foolproof technique. If the user does not run from the directory of the script or
# does not run the script in the parent shell (e.g. does not do: . ./setup.aix), the script will not
# work correctly.
#
cd `dirname $BASH_ARGV`/../
rtmb_home=$PWD
cd $rtmb_home

export RTMB_HOME=$PWD

# Change back to the original directory the script was run from
cd $orig_pwd

# Set up environment variables unique to AIX
# AIXTHREAD_HRT is required to be set to true to get high-resolution timers
export AIXTHREAD_HRT=true

# RT_GRQ is required to be set to ON to get proper SCHED_FIFO scheduling
export RT_GRQ=ON       
 
# Set up the various directories required to make the RTMB code

export RTMB_LIB_DIR=$RTMB_HOME/lib
export RTMB_CONF_DIR=$RTMB_HOME/config
export RTMB_BIN_DIR=$RTMB_HOME/bin
export RTMB_SRC_DIR=$RTMB_HOME/src
export RTMB_JAR=$RTMB_LIB_DIR/rtmb.jar

# Set up environment variables unique to Linux

export MV=/bin/mv
export RM='/bin/rm -f'
export RMR='/bin/rm -rf'
export FIND='/usr/bin/find'
export JAVAC='javac -Xrealtime'
export JAVA='java'
export JAR='jar'
export JAR_OPT="cmf $RTMB_SRC_DIR/MANIFEST.MF"

echo "**** Setting up Environment Variables for build and run ****"
echo " MV:                    "$MV
echo " RM:                    "$RM
echo " RMR:                   "$RMR
echo " FIND:                  "$FIND
echo " JAVAC:                 "$JAVAC
echo " JAVA:                  "$JAVA
echo " JAR:                   "$JAR
echo " JAR_OPT:               "$JAR_OPT
echo " "
echo " RTMB_HOME:             "$RTMB_HOME
echo " RTMB_BIN_DIR:          "$RTMB_BIN_DIR
echo " RTMB_SRC_DIR:          "$RTMB_SRC_DIR
echo " RTMB_LIB_DIR:          "$RTMB_LIB_DIR
echo " RTMB_CONF_DIR:         "$RTMB_CONF_DIR
echo " RTMB_JAR:              "$RTMB_JAR
echo " "

echo  "Creating folder for binaries:"

if [ -d $RTMB_BIN_DIR ]
then
        echo " $RTMB_BIN_DIR already exists, no action taken"
else
        mkdir -p $RTMB_BIN_DIR
        echo " $RTMB_BIN_DIR created successfully"
fi

if [ -d $RTMB_LIB_DIR ]
then
        echo  " $RTMB_LIB_DIR already exists, no action taken"
else
        mkdir -p $RTMB_LIB_DIR
        echo  " $RTMB_LIB_DIR created successfully"
fi

echo  "**** Done setting up Environment Variables for build and run ****"